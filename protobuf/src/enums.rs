// This file is generated by rust-protobuf 2.24.1. Do not edit
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_imports)]
#![allow(unused_results)]
//! Generated file from `enums.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
// const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_2_24_1;

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum EPublishedFileQueryType {
    k_PublishedFileQueryType_RankedByVote = 0,
    k_PublishedFileQueryType_RankedByPublicationDate = 1,
    k_PublishedFileQueryType_AcceptedForGameRankedByAcceptanceDate = 2,
    k_PublishedFileQueryType_RankedByTrend = 3,
    k_PublishedFileQueryType_FavoritedByFriendsRankedByPublicationDate = 4,
    k_PublishedFileQueryType_CreatedByFriendsRankedByPublicationDate = 5,
    k_PublishedFileQueryType_RankedByNumTimesReported = 6,
    k_PublishedFileQueryType_CreatedByFollowedUsersRankedByPublicationDate = 7,
    k_PublishedFileQueryType_NotYetRated = 8,
    k_PublishedFileQueryType_RankedByTotalUniqueSubscriptions = 9,
    k_PublishedFileQueryType_RankedByTotalVotesAsc = 10,
    k_PublishedFileQueryType_RankedByVotesUp = 11,
    k_PublishedFileQueryType_RankedByTextSearch = 12,
    k_PublishedFileQueryType_RankedByPlaytimeTrend = 13,
    k_PublishedFileQueryType_RankedByTotalPlaytime = 14,
    k_PublishedFileQueryType_RankedByAveragePlaytimeTrend = 15,
    k_PublishedFileQueryType_RankedByLifetimeAveragePlaytime = 16,
    k_PublishedFileQueryType_RankedByPlaytimeSessionsTrend = 17,
    k_PublishedFileQueryType_RankedByLifetimePlaytimeSessions = 18,
    k_PublishedFileQueryType_RankedByInappropriateContentRating = 19,
}

impl ::protobuf::ProtobufEnum for EPublishedFileQueryType {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EPublishedFileQueryType> {
        match value {
            0 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByVote),
            1 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByPublicationDate),
            2 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_AcceptedForGameRankedByAcceptanceDate),
            3 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTrend),
            4 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_FavoritedByFriendsRankedByPublicationDate),
            5 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_CreatedByFriendsRankedByPublicationDate),
            6 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByNumTimesReported),
            7 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_CreatedByFollowedUsersRankedByPublicationDate),
            8 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_NotYetRated),
            9 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTotalUniqueSubscriptions),
            10 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTotalVotesAsc),
            11 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByVotesUp),
            12 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTextSearch),
            13 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByPlaytimeTrend),
            14 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTotalPlaytime),
            15 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByAveragePlaytimeTrend),
            16 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByLifetimeAveragePlaytime),
            17 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByPlaytimeSessionsTrend),
            18 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByLifetimePlaytimeSessions),
            19 => ::std::option::Option::Some(EPublishedFileQueryType::k_PublishedFileQueryType_RankedByInappropriateContentRating),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [EPublishedFileQueryType] = &[
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByVote,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByPublicationDate,
            EPublishedFileQueryType::k_PublishedFileQueryType_AcceptedForGameRankedByAcceptanceDate,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTrend,
            EPublishedFileQueryType::k_PublishedFileQueryType_FavoritedByFriendsRankedByPublicationDate,
            EPublishedFileQueryType::k_PublishedFileQueryType_CreatedByFriendsRankedByPublicationDate,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByNumTimesReported,
            EPublishedFileQueryType::k_PublishedFileQueryType_CreatedByFollowedUsersRankedByPublicationDate,
            EPublishedFileQueryType::k_PublishedFileQueryType_NotYetRated,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTotalUniqueSubscriptions,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTotalVotesAsc,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByVotesUp,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTextSearch,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByPlaytimeTrend,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByTotalPlaytime,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByAveragePlaytimeTrend,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByLifetimeAveragePlaytime,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByPlaytimeSessionsTrend,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByLifetimePlaytimeSessions,
            EPublishedFileQueryType::k_PublishedFileQueryType_RankedByInappropriateContentRating,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<EPublishedFileQueryType>("EPublishedFileQueryType", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for EPublishedFileQueryType {
}

impl ::std::default::Default for EPublishedFileQueryType {
    fn default() -> Self {
        EPublishedFileQueryType::k_PublishedFileQueryType_RankedByVote
    }
}

impl ::protobuf::reflect::ProtobufValue for EPublishedFileQueryType {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum EPublishedFileInappropriateProvider {
    k_EPublishedFileInappropriateProvider_Invalid = 0,
    k_EPublishedFileInappropriateProvider_Google = 1,
    k_EPublishedFileInappropriateProvider_Amazon = 2,
}

impl ::protobuf::ProtobufEnum for EPublishedFileInappropriateProvider {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EPublishedFileInappropriateProvider> {
        match value {
            0 => ::std::option::Option::Some(EPublishedFileInappropriateProvider::k_EPublishedFileInappropriateProvider_Invalid),
            1 => ::std::option::Option::Some(EPublishedFileInappropriateProvider::k_EPublishedFileInappropriateProvider_Google),
            2 => ::std::option::Option::Some(EPublishedFileInappropriateProvider::k_EPublishedFileInappropriateProvider_Amazon),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [EPublishedFileInappropriateProvider] = &[
            EPublishedFileInappropriateProvider::k_EPublishedFileInappropriateProvider_Invalid,
            EPublishedFileInappropriateProvider::k_EPublishedFileInappropriateProvider_Google,
            EPublishedFileInappropriateProvider::k_EPublishedFileInappropriateProvider_Amazon,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<EPublishedFileInappropriateProvider>("EPublishedFileInappropriateProvider", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for EPublishedFileInappropriateProvider {
}

impl ::std::default::Default for EPublishedFileInappropriateProvider {
    fn default() -> Self {
        EPublishedFileInappropriateProvider::k_EPublishedFileInappropriateProvider_Invalid
    }
}

impl ::protobuf::reflect::ProtobufValue for EPublishedFileInappropriateProvider {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum EPublishedFileInappropriateResult {
    k_EPublishedFileInappropriateResult_NotScanned = 0,
    k_EPublishedFileInappropriateResult_VeryUnlikely = 1,
    k_EPublishedFileInappropriateResult_Unlikely = 30,
    k_EPublishedFileInappropriateResult_Possible = 50,
    k_EPublishedFileInappropriateResult_Likely = 75,
    k_EPublishedFileInappropriateResult_VeryLikely = 100,
}

impl ::protobuf::ProtobufEnum for EPublishedFileInappropriateResult {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EPublishedFileInappropriateResult> {
        match value {
            0 => ::std::option::Option::Some(EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_NotScanned),
            1 => ::std::option::Option::Some(EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_VeryUnlikely),
            30 => ::std::option::Option::Some(EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_Unlikely),
            50 => ::std::option::Option::Some(EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_Possible),
            75 => ::std::option::Option::Some(EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_Likely),
            100 => ::std::option::Option::Some(EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_VeryLikely),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [EPublishedFileInappropriateResult] = &[
            EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_NotScanned,
            EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_VeryUnlikely,
            EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_Unlikely,
            EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_Possible,
            EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_Likely,
            EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_VeryLikely,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<EPublishedFileInappropriateResult>("EPublishedFileInappropriateResult", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for EPublishedFileInappropriateResult {
}

impl ::std::default::Default for EPublishedFileInappropriateResult {
    fn default() -> Self {
        EPublishedFileInappropriateResult::k_EPublishedFileInappropriateResult_NotScanned
    }
}

impl ::protobuf::reflect::ProtobufValue for EPublishedFileInappropriateResult {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum EPersonaStateFlag {
    k_EPersonaStateFlag_HasRichPresence = 1,
    k_EPersonaStateFlag_InJoinableGame = 2,
    k_EPersonaStateFlag_Golden = 4,
    k_EPersonaStateFlag_RemotePlayTogether = 8,
    k_EPersonaStateFlag_ClientTypeWeb = 256,
    k_EPersonaStateFlag_ClientTypeMobile = 512,
    k_EPersonaStateFlag_ClientTypeTenfoot = 1024,
    k_EPersonaStateFlag_ClientTypeVR = 2048,
    k_EPersonaStateFlag_LaunchTypeGamepad = 4096,
    k_EPersonaStateFlag_LaunchTypeCompatTool = 8192,
}

impl ::protobuf::ProtobufEnum for EPersonaStateFlag {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EPersonaStateFlag> {
        match value {
            1 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_HasRichPresence),
            2 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_InJoinableGame),
            4 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_Golden),
            8 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_RemotePlayTogether),
            256 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_ClientTypeWeb),
            512 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_ClientTypeMobile),
            1024 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_ClientTypeTenfoot),
            2048 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_ClientTypeVR),
            4096 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_LaunchTypeGamepad),
            8192 => ::std::option::Option::Some(EPersonaStateFlag::k_EPersonaStateFlag_LaunchTypeCompatTool),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [EPersonaStateFlag] = &[
            EPersonaStateFlag::k_EPersonaStateFlag_HasRichPresence,
            EPersonaStateFlag::k_EPersonaStateFlag_InJoinableGame,
            EPersonaStateFlag::k_EPersonaStateFlag_Golden,
            EPersonaStateFlag::k_EPersonaStateFlag_RemotePlayTogether,
            EPersonaStateFlag::k_EPersonaStateFlag_ClientTypeWeb,
            EPersonaStateFlag::k_EPersonaStateFlag_ClientTypeMobile,
            EPersonaStateFlag::k_EPersonaStateFlag_ClientTypeTenfoot,
            EPersonaStateFlag::k_EPersonaStateFlag_ClientTypeVR,
            EPersonaStateFlag::k_EPersonaStateFlag_LaunchTypeGamepad,
            EPersonaStateFlag::k_EPersonaStateFlag_LaunchTypeCompatTool,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<EPersonaStateFlag>("EPersonaStateFlag", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for EPersonaStateFlag {
}

// Note, `Default` is implemented although default value is not 0
impl ::std::default::Default for EPersonaStateFlag {
    fn default() -> Self {
        EPersonaStateFlag::k_EPersonaStateFlag_HasRichPresence
    }
}

impl ::protobuf::reflect::ProtobufValue for EPersonaStateFlag {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum EContentCheckProvider {
    k_EContentCheckProvider_Invalid = 0,
    k_EContentCheckProvider_Google = 1,
    k_EContentCheckProvider_Amazon = 2,
    k_EContentCheckProvider_Local = 3,
}

impl ::protobuf::ProtobufEnum for EContentCheckProvider {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EContentCheckProvider> {
        match value {
            0 => ::std::option::Option::Some(EContentCheckProvider::k_EContentCheckProvider_Invalid),
            1 => ::std::option::Option::Some(EContentCheckProvider::k_EContentCheckProvider_Google),
            2 => ::std::option::Option::Some(EContentCheckProvider::k_EContentCheckProvider_Amazon),
            3 => ::std::option::Option::Some(EContentCheckProvider::k_EContentCheckProvider_Local),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [EContentCheckProvider] = &[
            EContentCheckProvider::k_EContentCheckProvider_Invalid,
            EContentCheckProvider::k_EContentCheckProvider_Google,
            EContentCheckProvider::k_EContentCheckProvider_Amazon,
            EContentCheckProvider::k_EContentCheckProvider_Local,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<EContentCheckProvider>("EContentCheckProvider", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for EContentCheckProvider {
}

impl ::std::default::Default for EContentCheckProvider {
    fn default() -> Self {
        EContentCheckProvider::k_EContentCheckProvider_Invalid
    }
}

impl ::protobuf::reflect::ProtobufValue for EContentCheckProvider {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum EBanContentCheckResult {
    k_EBanContentCheckResult_NotScanned = 0,
    k_EBanContentCheckResult_Reset = 1,
    k_EBanContentCheckResult_NeedsChecking = 2,
    k_EBanContentCheckResult_VeryUnlikely = 5,
    k_EBanContentCheckResult_Unlikely = 30,
    k_EBanContentCheckResult_Possible = 50,
    k_EBanContentCheckResult_Likely = 75,
    k_EBanContentCheckResult_VeryLikely = 100,
}

impl ::protobuf::ProtobufEnum for EBanContentCheckResult {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EBanContentCheckResult> {
        match value {
            0 => ::std::option::Option::Some(EBanContentCheckResult::k_EBanContentCheckResult_NotScanned),
            1 => ::std::option::Option::Some(EBanContentCheckResult::k_EBanContentCheckResult_Reset),
            2 => ::std::option::Option::Some(EBanContentCheckResult::k_EBanContentCheckResult_NeedsChecking),
            5 => ::std::option::Option::Some(EBanContentCheckResult::k_EBanContentCheckResult_VeryUnlikely),
            30 => ::std::option::Option::Some(EBanContentCheckResult::k_EBanContentCheckResult_Unlikely),
            50 => ::std::option::Option::Some(EBanContentCheckResult::k_EBanContentCheckResult_Possible),
            75 => ::std::option::Option::Some(EBanContentCheckResult::k_EBanContentCheckResult_Likely),
            100 => ::std::option::Option::Some(EBanContentCheckResult::k_EBanContentCheckResult_VeryLikely),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [EBanContentCheckResult] = &[
            EBanContentCheckResult::k_EBanContentCheckResult_NotScanned,
            EBanContentCheckResult::k_EBanContentCheckResult_Reset,
            EBanContentCheckResult::k_EBanContentCheckResult_NeedsChecking,
            EBanContentCheckResult::k_EBanContentCheckResult_VeryUnlikely,
            EBanContentCheckResult::k_EBanContentCheckResult_Unlikely,
            EBanContentCheckResult::k_EBanContentCheckResult_Possible,
            EBanContentCheckResult::k_EBanContentCheckResult_Likely,
            EBanContentCheckResult::k_EBanContentCheckResult_VeryLikely,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<EBanContentCheckResult>("EBanContentCheckResult", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for EBanContentCheckResult {
}

impl ::std::default::Default for EBanContentCheckResult {
    fn default() -> Self {
        EBanContentCheckResult::k_EBanContentCheckResult_NotScanned
    }
}

impl ::protobuf::reflect::ProtobufValue for EBanContentCheckResult {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum EProfileCustomizationType {
    k_EProfileCustomizationTypeInvalid = 0,
    k_EProfileCustomizationTypeRareAchievementShowcase = 1,
    k_EProfileCustomizationTypeGameCollector = 2,
    k_EProfileCustomizationTypeItemShowcase = 3,
    k_EProfileCustomizationTypeTradeShowcase = 4,
    k_EProfileCustomizationTypeBadges = 5,
    k_EProfileCustomizationTypeFavoriteGame = 6,
    k_EProfileCustomizationTypeScreenshotShowcase = 7,
    k_EProfileCustomizationTypeCustomText = 8,
    k_EProfileCustomizationTypeFavoriteGroup = 9,
    k_EProfileCustomizationTypeRecommendation = 10,
    k_EProfileCustomizationTypeWorkshopItem = 11,
    k_EProfileCustomizationTypeMyWorkshop = 12,
    k_EProfileCustomizationTypeArtworkShowcase = 13,
    k_EProfileCustomizationTypeVideoShowcase = 14,
    k_EProfileCustomizationTypeGuides = 15,
    k_EProfileCustomizationTypeMyGuides = 16,
    k_EProfileCustomizationTypeAchievements = 17,
    k_EProfileCustomizationTypeGreenlight = 18,
    k_EProfileCustomizationTypeMyGreenlight = 19,
    k_EProfileCustomizationTypeSalien = 20,
    k_EProfileCustomizationTypeLoyaltyRewardReactions = 21,
    k_EProfileCustomizationTypeSingleArtworkShowcase = 22,
    k_EProfileCustomizationTypeAchievementsCompletionist = 23,
}

impl ::protobuf::ProtobufEnum for EProfileCustomizationType {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EProfileCustomizationType> {
        match value {
            0 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeInvalid),
            1 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeRareAchievementShowcase),
            2 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeGameCollector),
            3 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeItemShowcase),
            4 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeTradeShowcase),
            5 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeBadges),
            6 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeFavoriteGame),
            7 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeScreenshotShowcase),
            8 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeCustomText),
            9 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeFavoriteGroup),
            10 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeRecommendation),
            11 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeWorkshopItem),
            12 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeMyWorkshop),
            13 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeArtworkShowcase),
            14 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeVideoShowcase),
            15 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeGuides),
            16 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeMyGuides),
            17 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeAchievements),
            18 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeGreenlight),
            19 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeMyGreenlight),
            20 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeSalien),
            21 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeLoyaltyRewardReactions),
            22 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeSingleArtworkShowcase),
            23 => ::std::option::Option::Some(EProfileCustomizationType::k_EProfileCustomizationTypeAchievementsCompletionist),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [EProfileCustomizationType] = &[
            EProfileCustomizationType::k_EProfileCustomizationTypeInvalid,
            EProfileCustomizationType::k_EProfileCustomizationTypeRareAchievementShowcase,
            EProfileCustomizationType::k_EProfileCustomizationTypeGameCollector,
            EProfileCustomizationType::k_EProfileCustomizationTypeItemShowcase,
            EProfileCustomizationType::k_EProfileCustomizationTypeTradeShowcase,
            EProfileCustomizationType::k_EProfileCustomizationTypeBadges,
            EProfileCustomizationType::k_EProfileCustomizationTypeFavoriteGame,
            EProfileCustomizationType::k_EProfileCustomizationTypeScreenshotShowcase,
            EProfileCustomizationType::k_EProfileCustomizationTypeCustomText,
            EProfileCustomizationType::k_EProfileCustomizationTypeFavoriteGroup,
            EProfileCustomizationType::k_EProfileCustomizationTypeRecommendation,
            EProfileCustomizationType::k_EProfileCustomizationTypeWorkshopItem,
            EProfileCustomizationType::k_EProfileCustomizationTypeMyWorkshop,
            EProfileCustomizationType::k_EProfileCustomizationTypeArtworkShowcase,
            EProfileCustomizationType::k_EProfileCustomizationTypeVideoShowcase,
            EProfileCustomizationType::k_EProfileCustomizationTypeGuides,
            EProfileCustomizationType::k_EProfileCustomizationTypeMyGuides,
            EProfileCustomizationType::k_EProfileCustomizationTypeAchievements,
            EProfileCustomizationType::k_EProfileCustomizationTypeGreenlight,
            EProfileCustomizationType::k_EProfileCustomizationTypeMyGreenlight,
            EProfileCustomizationType::k_EProfileCustomizationTypeSalien,
            EProfileCustomizationType::k_EProfileCustomizationTypeLoyaltyRewardReactions,
            EProfileCustomizationType::k_EProfileCustomizationTypeSingleArtworkShowcase,
            EProfileCustomizationType::k_EProfileCustomizationTypeAchievementsCompletionist,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<EProfileCustomizationType>("EProfileCustomizationType", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for EProfileCustomizationType {
}

impl ::std::default::Default for EProfileCustomizationType {
    fn default() -> Self {
        EProfileCustomizationType::k_EProfileCustomizationTypeInvalid
    }
}

impl ::protobuf::reflect::ProtobufValue for EProfileCustomizationType {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x0benums.proto\x1a\x18steammessages_base.proto*\x94\t\n\x17EPublished\
    FileQueryType\x12)\n%k_PublishedFileQueryType_RankedByVote\x10\0\x124\n0\
    k_PublishedFileQueryType_RankedByPublicationDate\x10\x01\x12B\n>k_Publis\
    hedFileQueryType_AcceptedForGameRankedByAcceptanceDate\x10\x02\x12*\n&k_\
    PublishedFileQueryType_RankedByTrend\x10\x03\x12F\nBk_PublishedFileQuery\
    Type_FavoritedByFriendsRankedByPublicationDate\x10\x04\x12D\n@k_Publishe\
    dFileQueryType_CreatedByFriendsRankedByPublicationDate\x10\x05\x125\n1k_\
    PublishedFileQueryType_RankedByNumTimesReported\x10\x06\x12J\nFk_Publish\
    edFileQueryType_CreatedByFollowedUsersRankedByPublicationDate\x10\x07\
    \x12(\n$k_PublishedFileQueryType_NotYetRated\x10\x08\x12=\n9k_PublishedF\
    ileQueryType_RankedByTotalUniqueSubscriptions\x10\t\x122\n.k_PublishedFi\
    leQueryType_RankedByTotalVotesAsc\x10\n\x12,\n(k_PublishedFileQueryType_\
    RankedByVotesUp\x10\x0b\x12/\n+k_PublishedFileQueryType_RankedByTextSear\
    ch\x10\x0c\x122\n.k_PublishedFileQueryType_RankedByPlaytimeTrend\x10\r\
    \x122\n.k_PublishedFileQueryType_RankedByTotalPlaytime\x10\x0e\x129\n5k_\
    PublishedFileQueryType_RankedByAveragePlaytimeTrend\x10\x0f\x12<\n8k_Pub\
    lishedFileQueryType_RankedByLifetimeAveragePlaytime\x10\x10\x12:\n6k_Pub\
    lishedFileQueryType_RankedByPlaytimeSessionsTrend\x10\x11\x12=\n9k_Publi\
    shedFileQueryType_RankedByLifetimePlaytimeSessions\x10\x12\x12?\n;k_Publ\
    ishedFileQueryType_RankedByInappropriateContentRating\x10\x13*\xbc\x01\n\
    #EPublishedFileInappropriateProvider\x121\n-k_EPublishedFileInappropriat\
    eProvider_Invalid\x10\0\x120\n,k_EPublishedFileInappropriateProvider_Goo\
    gle\x10\x01\x120\n,k_EPublishedFileInappropriateProvider_Amazon\x10\x02*\
    \xd5\x02\n!EPublishedFileInappropriateResult\x122\n.k_EPublishedFileInap\
    propriateResult_NotScanned\x10\0\x124\n0k_EPublishedFileInappropriateRes\
    ult_VeryUnlikely\x10\x01\x120\n,k_EPublishedFileInappropriateResult_Unli\
    kely\x10\x1e\x120\n,k_EPublishedFileInappropriateResult_Possible\x102\
    \x12.\n*k_EPublishedFileInappropriateResult_Likely\x10K\x122\n.k_EPublis\
    hedFileInappropriateResult_VeryLikely\x10d*\xb1\x03\n\x11EPersonaStateFl\
    ag\x12'\n#k_EPersonaStateFlag_HasRichPresence\x10\x01\x12&\n\"k_EPersona\
    StateFlag_InJoinableGame\x10\x02\x12\x1e\n\x1ak_EPersonaStateFlag_Golden\
    \x10\x04\x12*\n&k_EPersonaStateFlag_RemotePlayTogether\x10\x08\x12&\n!k_\
    EPersonaStateFlag_ClientTypeWeb\x10\x80\x02\x12)\n$k_EPersonaStateFlag_C\
    lientTypeMobile\x10\x80\x04\x12*\n%k_EPersonaStateFlag_ClientTypeTenfoot\
    \x10\x80\x08\x12%\n\x20k_EPersonaStateFlag_ClientTypeVR\x10\x80\x10\x12*\
    \n%k_EPersonaStateFlag_LaunchTypeGamepad\x10\x80\x20\x12-\n(k_EPersonaSt\
    ateFlag_LaunchTypeCompatTool\x10\x80@*\xa7\x01\n\x15EContentCheckProvide\
    r\x12#\n\x1fk_EContentCheckProvider_Invalid\x10\0\x12\"\n\x1ek_EContentC\
    heckProvider_Google\x10\x01\x12\"\n\x1ek_EContentCheckProvider_Amazon\
    \x10\x02\x12!\n\x1dk_EContentCheckProvider_Local\x10\x03*\xd8\x02\n\x16E\
    BanContentCheckResult\x12'\n#k_EBanContentCheckResult_NotScanned\x10\0\
    \x12\"\n\x1ek_EBanContentCheckResult_Reset\x10\x01\x12*\n&k_EBanContentC\
    heckResult_NeedsChecking\x10\x02\x12)\n%k_EBanContentCheckResult_VeryUnl\
    ikely\x10\x05\x12%\n!k_EBanContentCheckResult_Unlikely\x10\x1e\x12%\n!k_\
    EBanContentCheckResult_Possible\x102\x12#\n\x1fk_EBanContentCheckResult_\
    Likely\x10K\x12'\n#k_EBanContentCheckResult_VeryLikely\x10d*\xec\x08\n\
    \x19EProfileCustomizationType\x12&\n\"k_EProfileCustomizationTypeInvalid\
    \x10\0\x126\n2k_EProfileCustomizationTypeRareAchievementShowcase\x10\x01\
    \x12,\n(k_EProfileCustomizationTypeGameCollector\x10\x02\x12+\n'k_EProfi\
    leCustomizationTypeItemShowcase\x10\x03\x12,\n(k_EProfileCustomizationTy\
    peTradeShowcase\x10\x04\x12%\n!k_EProfileCustomizationTypeBadges\x10\x05\
    \x12+\n'k_EProfileCustomizationTypeFavoriteGame\x10\x06\x121\n-k_EProfil\
    eCustomizationTypeScreenshotShowcase\x10\x07\x12)\n%k_EProfileCustomizat\
    ionTypeCustomText\x10\x08\x12,\n(k_EProfileCustomizationTypeFavoriteGrou\
    p\x10\t\x12-\n)k_EProfileCustomizationTypeRecommendation\x10\n\x12+\n'k_\
    EProfileCustomizationTypeWorkshopItem\x10\x0b\x12)\n%k_EProfileCustomiza\
    tionTypeMyWorkshop\x10\x0c\x12.\n*k_EProfileCustomizationTypeArtworkShow\
    case\x10\r\x12,\n(k_EProfileCustomizationTypeVideoShowcase\x10\x0e\x12%\
    \n!k_EProfileCustomizationTypeGuides\x10\x0f\x12'\n#k_EProfileCustomizat\
    ionTypeMyGuides\x10\x10\x12+\n'k_EProfileCustomizationTypeAchievements\
    \x10\x11\x12)\n%k_EProfileCustomizationTypeGreenlight\x10\x12\x12+\n'k_E\
    ProfileCustomizationTypeMyGreenlight\x10\x13\x12%\n!k_EProfileCustomizat\
    ionTypeSalien\x10\x14\x125\n1k_EProfileCustomizationTypeLoyaltyRewardRea\
    ctions\x10\x15\x124\n0k_EProfileCustomizationTypeSingleArtworkShowcase\
    \x10\x16\x128\n4k_EProfileCustomizationTypeAchievementsCompletionist\x10\
    \x17B\tH\x01\x80\x01\x01\x80\xb5\x18\x01J\xff\x19\n\x06\x12\x04\0\0d\x01\
    \n\t\n\x02\x03\0\x12\x03\0\0\"\n\x08\n\x01\x08\x12\x03\x02\0\x1c\n\t\n\
    \x02\x08\t\x12\x03\x02\0\x1c\n\x08\n\x01\x08\x12\x03\x03\0\"\n\t\n\x02\
    \x08\x10\x12\x03\x03\0\"\n\x08\n\x01\x08\x12\x03\x04\0%\n\x0b\n\x04\x08\
    \xd0\x86\x03\x12\x03\x04\0%\n\n\n\x02\x05\0\x12\x04\x06\0\x1b\x01\n\n\n\
    \x03\x05\0\x01\x12\x03\x06\x05\x1c\n\x0b\n\x04\x05\0\x02\0\x12\x03\x07\
    \x082\n\x0c\n\x05\x05\0\x02\0\x01\x12\x03\x07\x08-\n\x0c\n\x05\x05\0\x02\
    \0\x02\x12\x03\x0701\n\x0b\n\x04\x05\0\x02\x01\x12\x03\x08\x08=\n\x0c\n\
    \x05\x05\0\x02\x01\x01\x12\x03\x08\x088\n\x0c\n\x05\x05\0\x02\x01\x02\
    \x12\x03\x08;<\n\x0b\n\x04\x05\0\x02\x02\x12\x03\t\x08K\n\x0c\n\x05\x05\
    \0\x02\x02\x01\x12\x03\t\x08F\n\x0c\n\x05\x05\0\x02\x02\x02\x12\x03\tIJ\
    \n\x0b\n\x04\x05\0\x02\x03\x12\x03\n\x083\n\x0c\n\x05\x05\0\x02\x03\x01\
    \x12\x03\n\x08.\n\x0c\n\x05\x05\0\x02\x03\x02\x12\x03\n12\n\x0b\n\x04\
    \x05\0\x02\x04\x12\x03\x0b\x08O\n\x0c\n\x05\x05\0\x02\x04\x01\x12\x03\
    \x0b\x08J\n\x0c\n\x05\x05\0\x02\x04\x02\x12\x03\x0bMN\n\x0b\n\x04\x05\0\
    \x02\x05\x12\x03\x0c\x08M\n\x0c\n\x05\x05\0\x02\x05\x01\x12\x03\x0c\x08H\
    \n\x0c\n\x05\x05\0\x02\x05\x02\x12\x03\x0cKL\n\x0b\n\x04\x05\0\x02\x06\
    \x12\x03\r\x08>\n\x0c\n\x05\x05\0\x02\x06\x01\x12\x03\r\x089\n\x0c\n\x05\
    \x05\0\x02\x06\x02\x12\x03\r<=\n\x0b\n\x04\x05\0\x02\x07\x12\x03\x0e\x08\
    S\n\x0c\n\x05\x05\0\x02\x07\x01\x12\x03\x0e\x08N\n\x0c\n\x05\x05\0\x02\
    \x07\x02\x12\x03\x0eQR\n\x0b\n\x04\x05\0\x02\x08\x12\x03\x0f\x081\n\x0c\
    \n\x05\x05\0\x02\x08\x01\x12\x03\x0f\x08,\n\x0c\n\x05\x05\0\x02\x08\x02\
    \x12\x03\x0f/0\n\x0b\n\x04\x05\0\x02\t\x12\x03\x10\x08F\n\x0c\n\x05\x05\
    \0\x02\t\x01\x12\x03\x10\x08A\n\x0c\n\x05\x05\0\x02\t\x02\x12\x03\x10DE\
    \n\x0b\n\x04\x05\0\x02\n\x12\x03\x11\x08<\n\x0c\n\x05\x05\0\x02\n\x01\
    \x12\x03\x11\x086\n\x0c\n\x05\x05\0\x02\n\x02\x12\x03\x119;\n\x0b\n\x04\
    \x05\0\x02\x0b\x12\x03\x12\x086\n\x0c\n\x05\x05\0\x02\x0b\x01\x12\x03\
    \x12\x080\n\x0c\n\x05\x05\0\x02\x0b\x02\x12\x03\x1235\n\x0b\n\x04\x05\0\
    \x02\x0c\x12\x03\x13\x089\n\x0c\n\x05\x05\0\x02\x0c\x01\x12\x03\x13\x083\
    \n\x0c\n\x05\x05\0\x02\x0c\x02\x12\x03\x1368\n\x0b\n\x04\x05\0\x02\r\x12\
    \x03\x14\x08<\n\x0c\n\x05\x05\0\x02\r\x01\x12\x03\x14\x086\n\x0c\n\x05\
    \x05\0\x02\r\x02\x12\x03\x149;\n\x0b\n\x04\x05\0\x02\x0e\x12\x03\x15\x08\
    <\n\x0c\n\x05\x05\0\x02\x0e\x01\x12\x03\x15\x086\n\x0c\n\x05\x05\0\x02\
    \x0e\x02\x12\x03\x159;\n\x0b\n\x04\x05\0\x02\x0f\x12\x03\x16\x08C\n\x0c\
    \n\x05\x05\0\x02\x0f\x01\x12\x03\x16\x08=\n\x0c\n\x05\x05\0\x02\x0f\x02\
    \x12\x03\x16@B\n\x0b\n\x04\x05\0\x02\x10\x12\x03\x17\x08F\n\x0c\n\x05\
    \x05\0\x02\x10\x01\x12\x03\x17\x08@\n\x0c\n\x05\x05\0\x02\x10\x02\x12\
    \x03\x17CE\n\x0b\n\x04\x05\0\x02\x11\x12\x03\x18\x08D\n\x0c\n\x05\x05\0\
    \x02\x11\x01\x12\x03\x18\x08>\n\x0c\n\x05\x05\0\x02\x11\x02\x12\x03\x18A\
    C\n\x0b\n\x04\x05\0\x02\x12\x12\x03\x19\x08G\n\x0c\n\x05\x05\0\x02\x12\
    \x01\x12\x03\x19\x08A\n\x0c\n\x05\x05\0\x02\x12\x02\x12\x03\x19DF\n\x0b\
    \n\x04\x05\0\x02\x13\x12\x03\x1a\x08I\n\x0c\n\x05\x05\0\x02\x13\x01\x12\
    \x03\x1a\x08C\n\x0c\n\x05\x05\0\x02\x13\x02\x12\x03\x1aFH\n\n\n\x02\x05\
    \x01\x12\x04\x1d\0!\x01\n\n\n\x03\x05\x01\x01\x12\x03\x1d\x05(\n\x0b\n\
    \x04\x05\x01\x02\0\x12\x03\x1e\x08:\n\x0c\n\x05\x05\x01\x02\0\x01\x12\
    \x03\x1e\x085\n\x0c\n\x05\x05\x01\x02\0\x02\x12\x03\x1e89\n\x0b\n\x04\
    \x05\x01\x02\x01\x12\x03\x1f\x089\n\x0c\n\x05\x05\x01\x02\x01\x01\x12\
    \x03\x1f\x084\n\x0c\n\x05\x05\x01\x02\x01\x02\x12\x03\x1f78\n\x0b\n\x04\
    \x05\x01\x02\x02\x12\x03\x20\x089\n\x0c\n\x05\x05\x01\x02\x02\x01\x12\
    \x03\x20\x084\n\x0c\n\x05\x05\x01\x02\x02\x02\x12\x03\x2078\n\n\n\x02\
    \x05\x02\x12\x04#\0*\x01\n\n\n\x03\x05\x02\x01\x12\x03#\x05&\n\x0b\n\x04\
    \x05\x02\x02\0\x12\x03$\x08;\n\x0c\n\x05\x05\x02\x02\0\x01\x12\x03$\x086\
    \n\x0c\n\x05\x05\x02\x02\0\x02\x12\x03$9:\n\x0b\n\x04\x05\x02\x02\x01\
    \x12\x03%\x08=\n\x0c\n\x05\x05\x02\x02\x01\x01\x12\x03%\x088\n\x0c\n\x05\
    \x05\x02\x02\x01\x02\x12\x03%;<\n\x0b\n\x04\x05\x02\x02\x02\x12\x03&\x08\
    :\n\x0c\n\x05\x05\x02\x02\x02\x01\x12\x03&\x084\n\x0c\n\x05\x05\x02\x02\
    \x02\x02\x12\x03&79\n\x0b\n\x04\x05\x02\x02\x03\x12\x03'\x08:\n\x0c\n\
    \x05\x05\x02\x02\x03\x01\x12\x03'\x084\n\x0c\n\x05\x05\x02\x02\x03\x02\
    \x12\x03'79\n\x0b\n\x04\x05\x02\x02\x04\x12\x03(\x088\n\x0c\n\x05\x05\
    \x02\x02\x04\x01\x12\x03(\x082\n\x0c\n\x05\x05\x02\x02\x04\x02\x12\x03(5\
    7\n\x0b\n\x04\x05\x02\x02\x05\x12\x03)\x08=\n\x0c\n\x05\x05\x02\x02\x05\
    \x01\x12\x03)\x086\n\x0c\n\x05\x05\x02\x02\x05\x02\x12\x03)9<\n\n\n\x02\
    \x05\x03\x12\x04,\07\x01\n\n\n\x03\x05\x03\x01\x12\x03,\x05\x16\n\x0b\n\
    \x04\x05\x03\x02\0\x12\x03-\x080\n\x0c\n\x05\x05\x03\x02\0\x01\x12\x03-\
    \x08+\n\x0c\n\x05\x05\x03\x02\0\x02\x12\x03-./\n\x0b\n\x04\x05\x03\x02\
    \x01\x12\x03.\x08/\n\x0c\n\x05\x05\x03\x02\x01\x01\x12\x03.\x08*\n\x0c\n\
    \x05\x05\x03\x02\x01\x02\x12\x03.-.\n\x0b\n\x04\x05\x03\x02\x02\x12\x03/\
    \x08'\n\x0c\n\x05\x05\x03\x02\x02\x01\x12\x03/\x08\"\n\x0c\n\x05\x05\x03\
    \x02\x02\x02\x12\x03/%&\n\x0b\n\x04\x05\x03\x02\x03\x12\x030\x083\n\x0c\
    \n\x05\x05\x03\x02\x03\x01\x12\x030\x08.\n\x0c\n\x05\x05\x03\x02\x03\x02\
    \x12\x03012\n\x0b\n\x04\x05\x03\x02\x04\x12\x031\x080\n\x0c\n\x05\x05\
    \x03\x02\x04\x01\x12\x031\x08)\n\x0c\n\x05\x05\x03\x02\x04\x02\x12\x031,\
    /\n\x0b\n\x04\x05\x03\x02\x05\x12\x032\x083\n\x0c\n\x05\x05\x03\x02\x05\
    \x01\x12\x032\x08,\n\x0c\n\x05\x05\x03\x02\x05\x02\x12\x032/2\n\x0b\n\
    \x04\x05\x03\x02\x06\x12\x033\x085\n\x0c\n\x05\x05\x03\x02\x06\x01\x12\
    \x033\x08-\n\x0c\n\x05\x05\x03\x02\x06\x02\x12\x03304\n\x0b\n\x04\x05\
    \x03\x02\x07\x12\x034\x080\n\x0c\n\x05\x05\x03\x02\x07\x01\x12\x034\x08(\
    \n\x0c\n\x05\x05\x03\x02\x07\x02\x12\x034+/\n\x0b\n\x04\x05\x03\x02\x08\
    \x12\x035\x085\n\x0c\n\x05\x05\x03\x02\x08\x01\x12\x035\x08-\n\x0c\n\x05\
    \x05\x03\x02\x08\x02\x12\x03504\n\x0b\n\x04\x05\x03\x02\t\x12\x036\x088\
    \n\x0c\n\x05\x05\x03\x02\t\x01\x12\x036\x080\n\x0c\n\x05\x05\x03\x02\t\
    \x02\x12\x03637\n\n\n\x02\x05\x04\x12\x049\0>\x01\n\n\n\x03\x05\x04\x01\
    \x12\x039\x05\x1a\n\x0b\n\x04\x05\x04\x02\0\x12\x03:\x08,\n\x0c\n\x05\
    \x05\x04\x02\0\x01\x12\x03:\x08'\n\x0c\n\x05\x05\x04\x02\0\x02\x12\x03:*\
    +\n\x0b\n\x04\x05\x04\x02\x01\x12\x03;\x08+\n\x0c\n\x05\x05\x04\x02\x01\
    \x01\x12\x03;\x08&\n\x0c\n\x05\x05\x04\x02\x01\x02\x12\x03;)*\n\x0b\n\
    \x04\x05\x04\x02\x02\x12\x03<\x08+\n\x0c\n\x05\x05\x04\x02\x02\x01\x12\
    \x03<\x08&\n\x0c\n\x05\x05\x04\x02\x02\x02\x12\x03<)*\n\x0b\n\x04\x05\
    \x04\x02\x03\x12\x03=\x08*\n\x0c\n\x05\x05\x04\x02\x03\x01\x12\x03=\x08%\
    \n\x0c\n\x05\x05\x04\x02\x03\x02\x12\x03=()\n\n\n\x02\x05\x05\x12\x04@\0\
    I\x01\n\n\n\x03\x05\x05\x01\x12\x03@\x05\x1b\n\x0b\n\x04\x05\x05\x02\0\
    \x12\x03A\x080\n\x0c\n\x05\x05\x05\x02\0\x01\x12\x03A\x08+\n\x0c\n\x05\
    \x05\x05\x02\0\x02\x12\x03A./\n\x0b\n\x04\x05\x05\x02\x01\x12\x03B\x08+\
    \n\x0c\n\x05\x05\x05\x02\x01\x01\x12\x03B\x08&\n\x0c\n\x05\x05\x05\x02\
    \x01\x02\x12\x03B)*\n\x0b\n\x04\x05\x05\x02\x02\x12\x03C\x083\n\x0c\n\
    \x05\x05\x05\x02\x02\x01\x12\x03C\x08.\n\x0c\n\x05\x05\x05\x02\x02\x02\
    \x12\x03C12\n\x0b\n\x04\x05\x05\x02\x03\x12\x03D\x082\n\x0c\n\x05\x05\
    \x05\x02\x03\x01\x12\x03D\x08-\n\x0c\n\x05\x05\x05\x02\x03\x02\x12\x03D0\
    1\n\x0b\n\x04\x05\x05\x02\x04\x12\x03E\x08/\n\x0c\n\x05\x05\x05\x02\x04\
    \x01\x12\x03E\x08)\n\x0c\n\x05\x05\x05\x02\x04\x02\x12\x03E,.\n\x0b\n\
    \x04\x05\x05\x02\x05\x12\x03F\x08/\n\x0c\n\x05\x05\x05\x02\x05\x01\x12\
    \x03F\x08)\n\x0c\n\x05\x05\x05\x02\x05\x02\x12\x03F,.\n\x0b\n\x04\x05\
    \x05\x02\x06\x12\x03G\x08-\n\x0c\n\x05\x05\x05\x02\x06\x01\x12\x03G\x08'\
    \n\x0c\n\x05\x05\x05\x02\x06\x02\x12\x03G*,\n\x0b\n\x04\x05\x05\x02\x07\
    \x12\x03H\x082\n\x0c\n\x05\x05\x05\x02\x07\x01\x12\x03H\x08+\n\x0c\n\x05\
    \x05\x05\x02\x07\x02\x12\x03H.1\n\n\n\x02\x05\x06\x12\x04K\0d\x01\n\n\n\
    \x03\x05\x06\x01\x12\x03K\x05\x1e\n\x0b\n\x04\x05\x06\x02\0\x12\x03L\x08\
    /\n\x0c\n\x05\x05\x06\x02\0\x01\x12\x03L\x08*\n\x0c\n\x05\x05\x06\x02\0\
    \x02\x12\x03L-.\n\x0b\n\x04\x05\x06\x02\x01\x12\x03M\x08?\n\x0c\n\x05\
    \x05\x06\x02\x01\x01\x12\x03M\x08:\n\x0c\n\x05\x05\x06\x02\x01\x02\x12\
    \x03M=>\n\x0b\n\x04\x05\x06\x02\x02\x12\x03N\x085\n\x0c\n\x05\x05\x06\
    \x02\x02\x01\x12\x03N\x080\n\x0c\n\x05\x05\x06\x02\x02\x02\x12\x03N34\n\
    \x0b\n\x04\x05\x06\x02\x03\x12\x03O\x084\n\x0c\n\x05\x05\x06\x02\x03\x01\
    \x12\x03O\x08/\n\x0c\n\x05\x05\x06\x02\x03\x02\x12\x03O23\n\x0b\n\x04\
    \x05\x06\x02\x04\x12\x03P\x085\n\x0c\n\x05\x05\x06\x02\x04\x01\x12\x03P\
    \x080\n\x0c\n\x05\x05\x06\x02\x04\x02\x12\x03P34\n\x0b\n\x04\x05\x06\x02\
    \x05\x12\x03Q\x08.\n\x0c\n\x05\x05\x06\x02\x05\x01\x12\x03Q\x08)\n\x0c\n\
    \x05\x05\x06\x02\x05\x02\x12\x03Q,-\n\x0b\n\x04\x05\x06\x02\x06\x12\x03R\
    \x084\n\x0c\n\x05\x05\x06\x02\x06\x01\x12\x03R\x08/\n\x0c\n\x05\x05\x06\
    \x02\x06\x02\x12\x03R23\n\x0b\n\x04\x05\x06\x02\x07\x12\x03S\x08:\n\x0c\
    \n\x05\x05\x06\x02\x07\x01\x12\x03S\x085\n\x0c\n\x05\x05\x06\x02\x07\x02\
    \x12\x03S89\n\x0b\n\x04\x05\x06\x02\x08\x12\x03T\x082\n\x0c\n\x05\x05\
    \x06\x02\x08\x01\x12\x03T\x08-\n\x0c\n\x05\x05\x06\x02\x08\x02\x12\x03T0\
    1\n\x0b\n\x04\x05\x06\x02\t\x12\x03U\x085\n\x0c\n\x05\x05\x06\x02\t\x01\
    \x12\x03U\x080\n\x0c\n\x05\x05\x06\x02\t\x02\x12\x03U34\n\x0b\n\x04\x05\
    \x06\x02\n\x12\x03V\x087\n\x0c\n\x05\x05\x06\x02\n\x01\x12\x03V\x081\n\
    \x0c\n\x05\x05\x06\x02\n\x02\x12\x03V46\n\x0b\n\x04\x05\x06\x02\x0b\x12\
    \x03W\x085\n\x0c\n\x05\x05\x06\x02\x0b\x01\x12\x03W\x08/\n\x0c\n\x05\x05\
    \x06\x02\x0b\x02\x12\x03W24\n\x0b\n\x04\x05\x06\x02\x0c\x12\x03X\x083\n\
    \x0c\n\x05\x05\x06\x02\x0c\x01\x12\x03X\x08-\n\x0c\n\x05\x05\x06\x02\x0c\
    \x02\x12\x03X02\n\x0b\n\x04\x05\x06\x02\r\x12\x03Y\x088\n\x0c\n\x05\x05\
    \x06\x02\r\x01\x12\x03Y\x082\n\x0c\n\x05\x05\x06\x02\r\x02\x12\x03Y57\n\
    \x0b\n\x04\x05\x06\x02\x0e\x12\x03Z\x086\n\x0c\n\x05\x05\x06\x02\x0e\x01\
    \x12\x03Z\x080\n\x0c\n\x05\x05\x06\x02\x0e\x02\x12\x03Z35\n\x0b\n\x04\
    \x05\x06\x02\x0f\x12\x03[\x08/\n\x0c\n\x05\x05\x06\x02\x0f\x01\x12\x03[\
    \x08)\n\x0c\n\x05\x05\x06\x02\x0f\x02\x12\x03[,.\n\x0b\n\x04\x05\x06\x02\
    \x10\x12\x03\\\x081\n\x0c\n\x05\x05\x06\x02\x10\x01\x12\x03\\\x08+\n\x0c\
    \n\x05\x05\x06\x02\x10\x02\x12\x03\\.0\n\x0b\n\x04\x05\x06\x02\x11\x12\
    \x03]\x085\n\x0c\n\x05\x05\x06\x02\x11\x01\x12\x03]\x08/\n\x0c\n\x05\x05\
    \x06\x02\x11\x02\x12\x03]24\n\x0b\n\x04\x05\x06\x02\x12\x12\x03^\x083\n\
    \x0c\n\x05\x05\x06\x02\x12\x01\x12\x03^\x08-\n\x0c\n\x05\x05\x06\x02\x12\
    \x02\x12\x03^02\n\x0b\n\x04\x05\x06\x02\x13\x12\x03_\x085\n\x0c\n\x05\
    \x05\x06\x02\x13\x01\x12\x03_\x08/\n\x0c\n\x05\x05\x06\x02\x13\x02\x12\
    \x03_24\n\x0b\n\x04\x05\x06\x02\x14\x12\x03`\x08/\n\x0c\n\x05\x05\x06\
    \x02\x14\x01\x12\x03`\x08)\n\x0c\n\x05\x05\x06\x02\x14\x02\x12\x03`,.\n\
    \x0b\n\x04\x05\x06\x02\x15\x12\x03a\x08?\n\x0c\n\x05\x05\x06\x02\x15\x01\
    \x12\x03a\x089\n\x0c\n\x05\x05\x06\x02\x15\x02\x12\x03a<>\n\x0b\n\x04\
    \x05\x06\x02\x16\x12\x03b\x08>\n\x0c\n\x05\x05\x06\x02\x16\x01\x12\x03b\
    \x088\n\x0c\n\x05\x05\x06\x02\x16\x02\x12\x03b;=\n\x0b\n\x04\x05\x06\x02\
    \x17\x12\x03c\x08B\n\x0c\n\x05\x05\x06\x02\x17\x01\x12\x03c\x08<\n\x0c\n\
    \x05\x05\x06\x02\x17\x02\x12\x03c?A\
";

static file_descriptor_proto_lazy: ::protobuf::rt::LazyV2<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::LazyV2::INIT;

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    file_descriptor_proto_lazy.get(|| {
        parse_descriptor_proto()
    })
}
